pipeline {
    agent any
    tools {
        maven  'Maven'
    }
    environment {
        SONARQUBE_SERVER = 'sonar' // Ganti dengan nama server SonarQube Anda di Jenkins
        SONAR_TOKEN = credentials('sonarqube') // Simpan token SonarQube di Jenkins Credentials
        PROJECT_KEY = 'crm-pro'
        SONARQUBE_URL = 'http://localhost:9000'

    }

    stages {
        stage('Checkout Code') {
            steps {
                // Checkout kode dari GitHub
                echo 'Git Checkout Completed'
            }
        }

        stage('Set Environment') {
            steps {
               script {
                    // Set environment variables
                    env.JAVA_HOME = "\\opt\\JDK-23.0.1"
                    env.PATH = "${env.JAVA_HOME}/bin:${env.PATH}"
                }
            }
        }

        stage('Build and Test') {
            steps {
                // Jalankan Maven build
                sh './mvnw clean test'
            }
        }

        stage('Sonarqube Analysis') {
            steps {
                echo 'Sonarqube running....'
                script {
                    // Set environment variables
                    env.JAVA_HOME = "\opt\JDK-23.0.1"
                    env.PATH = "${env.JAVA_HOME}/bin:${env.PATH}"
                    sh "./mvnw clean verify sonar:sonar -Dsonar.projectKey=$PROJECT_KEY -Dsonar.host.url=${SONARQUBE_URL} -Dsonar.login=${SONAR_TOKEN}"
                }
            }
        }

        stage('Quality Gate Check') {
            steps {
                script {
                    // Memeriksa apakah quality gate di SonarQube lulus atau gagal
                    timeout(time: 5, unit: 'MINUTES') {
                        waitForQualityGate abortPipeline: true
                    }
                }
            }
        }

    }

    post {
        always {
            // Clean up workspace setelah selesai
            cleanWs()
        }
        success {
            echo 'Pipeline executed successfully!'
        }
        failure {
            echo 'Pipeline failed. Check logs for details.'
        }
    }
}
